[{"/Users/jakewalsh/Desktop/garden-buddy/client/src/index.js":"1","/Users/jakewalsh/Desktop/garden-buddy/client/src/App.js":"2","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Guides.js":"3","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Gardens.js":"4","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Schedule.js":"5","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Signup.js":"6","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Landing.js":"7","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Header.js":"8","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Login.js":"9","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/GardenTable.js":"10","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/helpers.js":"11","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/mutations.js":"12","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/auth.js":"13","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/queries.js":"14"},{"size":259,"mtime":1654822213505,"results":"15","hashOfConfig":"16"},{"size":3384,"mtime":1654829252652,"results":"17","hashOfConfig":"16"},{"size":3597,"mtime":1654661812317,"results":"18","hashOfConfig":"16"},{"size":1014,"mtime":1654830913315,"results":"19","hashOfConfig":"16"},{"size":4504,"mtime":1654753245045,"results":"20","hashOfConfig":"16"},{"size":2756,"mtime":1654661812317,"results":"21","hashOfConfig":"16"},{"size":819,"mtime":1654661812317,"results":"22","hashOfConfig":"16"},{"size":1261,"mtime":1654832704342,"results":"23","hashOfConfig":"16"},{"size":2552,"mtime":1654832704327,"results":"24","hashOfConfig":"16"},{"size":8770,"mtime":1654841104454,"results":"25","hashOfConfig":"16"},{"size":160,"mtime":1654661812336,"results":"26","hashOfConfig":"16"},{"size":2348,"mtime":1654835543997,"results":"27","hashOfConfig":"16"},{"size":1230,"mtime":1654832704327,"results":"28","hashOfConfig":"16"},{"size":816,"mtime":1654836486846,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1y8xzkr",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jakewalsh/Desktop/garden-buddy/client/src/index.js",[],["61","62"],"/Users/jakewalsh/Desktop/garden-buddy/client/src/App.js",["63"],"import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\nimport Header from './components/Header';\nimport Schedule from './pages/Schedule';\nimport Gardens from './pages/Gardens';\nimport Landing from './pages/Landing';\nimport Guides from './pages/Guides';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport herbLeft from './images/herbs-left.png';\nimport herbRight from './images/herbs-right.png';\nimport leafLeft from './images/leaf-left.png';\nimport leafRight from './images/leaf-right.png';\n\n\n// const client = new ApolloClient({\n//   uri: '/graphql',\n//   cache: new InMemoryCache(),\n// });\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <div className='outer-container'>\n            <div className='title-wrap'>\n              <div className='title-container'>\n                <div className='inc-imgs'>\n                  <img src={leafLeft} alt=\"leafs\" className='leafs'/>\n                  <NavLink className=\"app-title font-title\" to=\"/\">\n                    Garden Buddy\n                  </NavLink>\n                  <img src={leafRight} alt=\"leafs\" className='leafs'/>\n                </div>\n                <p className='subtitle font-title'>\n                  The app that grows with you\n                </p>\n              </div>\n            </div>\n            <div className='inner-container'>\n              <Header />\n              <div className='content-container'>\n                <Routes>\n                  <Route\n                    path=\"/\"\n                    element={<Landing />}\n                  />\n                  <Route \n                      path=\"/login\" \n                      element={<Login />}\n                  />\n                  <Route \n                  path=\"/signup\" \n                  element={<Signup />}\n                  />\n                  <Route \n                      path=\"/findzone\" \n                      element={<Schedule />}\n                  />\n                  <Route \n                      path=\"/guides\" \n                      element={<Guides />}\n                  />\n                  <Route \n                      path=\"/gardens\" \n                      element={<Gardens />}\n                  />\n                </Routes>\n                <div className='lower-imgs'>\n                  <img src={herbLeft} alt=\"herbs\" className='herbs'/>\n                  <img src={herbRight} alt=\"herbs\" className='herbs'/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Guides.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Gardens.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Schedule.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Signup.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Landing.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Header.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Login.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/components/GardenTable.js",["64","65"],"import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_GARDENS } from '../utils/queries';\nimport { QUERY_ME } from '../utils/queries';\nimport { ADD_GARDEN } from '../utils/mutations';\nimport './styles/gardentable.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst GardenTable = () => {\n\n    const { loading, data } = useQuery(QUERY_GARDENS);\n    const gardenList = data?.gardens || [];\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [vegetable, setVegetable] = useState('');\n    const [variety, setVariety] = useState('');\n    const [startedAs, setStartedAs] = useState('');\n    const [sowDate, setSowDate] = useState(new Date());\n    const [plantDate, setPlantDate] = useState(new Date());\n    const [firstHarvest, setFirstHarvest] = useState(new Date());\n    const [lastHarvest, setLastHarvest] = useState(new Date());\n    const [notes, setNotes] = useState('');\n\n\n    const [addGarden, { error }] = useMutation(ADD_GARDEN, {\n      update(cache, { data: { addGarden } }) {\n        try {\n          const { gardens } = cache.readQuery({ query: QUERY_GARDENS });\n  \n          cache.writeQuery({\n            query: QUERY_GARDENS,\n            data: { gardens: [addGarden, ...gardens] },\n          });\n        } catch (e) {\n          console.error(e);\n        }\n  \n        // update me object's cache\n        const { me } = cache.readQuery({ query: QUERY_ME });\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: { ...me, gardens: [...me.gardens, addGarden] } },\n        });\n      },\n    });\n\n    const handleAddGarden = async (e) => {\n      e.preventDefault();\n\n      try {\n        const { data } = await addGarden({\n          variables: {\n            vegetable,\n            variety,\n            startedAs,\n            sowDate,\n            plantDate,\n            firstHarvest,\n            lastHarvest,\n            notes\n          },\n        });\n\n        setVegetable('');\n        setVariety('');\n        setNotes('');\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const handleInputChange = (event) => {\n      const { name, value } = event.target;\n\n      if (name === 'vegetable') {\n        setVegetable(value);\n      } else if (name === 'variety') {\n        setVariety(value);\n      } else if (name === 'startedAs') {\n        setStartedAs(value);\n      } else {\n        setNotes(value);\n      }\n    };\n\n    return (\n        <>\n        <div className='table-wrap'>\n          {loading ? (\n            <div>Loading...</div>\n              ) : (\n            <table>\n              <thead>\n                <tr>\n                  <th>Actions</th>\n                  <th>Vegetable</th>\n                  <th>variety</th>\n                  <th>Sow Date</th>\n                  <th>Plant Date</th>\n                  <th>First Harvest</th>\n                  <th>Last Harvest</th>\n                  <th className='notes'>Notes</th>\n                </tr>\n              </thead>\n              <tbody>\n              {gardenList.map((garden) => {\n                return (\n                  <tr key={garden._id} value={garden.vegetable}>\n                    <td className='actions'>\n                        <button onClick={handleShow} className='button'>\n                            <FontAwesomeIcon icon={faEdit} />\n                        </button>\n                        <button onClick={handleShow} className='button'>\n                            <FontAwesomeIcon icon={faPlusCircle} />\n                        </button>\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.vegetable}\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.variety}\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.sowDate}\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.plantDate}\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.firstHarvest}\n                    </td>\n                    <td>\n                      {garden.lastHarvest}\n                    </td>\n                    <td className='notes-data'>\n                      {garden.notes}\n                    </td>\n                  </tr>\n                );\n              })}\n              </tbody>\n            </table>\n          )}\n        </div>\n        <Modal className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" show={show}>\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Modal title</h5>\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={handleClose}></button>\n              </div>\n              <div className=\"modal-body\">\n                <form onSubmit={handleAddGarden}>\n                  <div className=\"form-group\">\n                    <input\n                      value={vegetable}\n                      name='vegetable'\n                      onChange={handleInputChange}\n                      type='text'\n                      placeholder='Vegetable'\n                    />\n                    <input\n                      value={variety}\n                      name='variety'\n                      onChange={handleInputChange}\n                      type='text'\n                      placeholder='Variety'\n                    />\n                    <input\n                      value={startedAs}\n                      name='startedAs'\n                      onChange={handleInputChange}\n                      type='text'\n                      placeholder='Started as'\n                    />\n                    <div className='field-wrap'>\n                      <label className='input-label'>Select sowing date</label>\n                      <DatePicker \n                        className='field'\n                        selected={sowDate} \n                        onChange={setSowDate}\n                        dateFormat='MMMM dd yyyy'\n                      />\n                    </div>\n                    <div className='field-wrap'>\n                      <label className='input-label'>Select planting date</label>\n                      <DatePicker\n                        className='field'\n                        selected={plantDate} \n                        onChange={setPlantDate}\n                        dateFormat='MMMM dd yyyy'\n                      />\n                    </div>\n                    <div className='field-wrap'>\n                      <label className='input-label'>Select date of first harvest</label>\n                      <DatePicker\n                        className='field'\n                        selected={firstHarvest} \n                        onChange={setFirstHarvest}\n                        dateFormat='MMMM dd yyyy'\n                      />\n                    </div>\n                    <div className='field-wrap'>\n                      <label className='input-label'>Select date of last harvest</label>\n                      <DatePicker\n                        className='field'\n                        selected={lastHarvest} \n                        onChange={setLastHarvest}\n                        dateFormat='MMMM dd yyyy'\n                      />\n                    </div>\n                    <textarea\n                      placeholder=\"add some notes...\"\n                      value={notes}\n                      name='notes'\n                      onChange={handleInputChange}\n                      type='text'\n                      className='notes-input'\n                    ></textarea>\n                    <button className=\"btn btn-primary\" onClick={handleClose}>Submit</button>\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={handleClose}>Close</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleClose}>Save changes</button>\n              </div>\n            </div>\n          </div>\n        </Modal>\n    </>\n    )\n};\n\nexport default GardenTable;","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/helpers.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/mutations.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/auth.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/queries.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":50,"nodeType":"72","messageId":"73","endLine":3,"endColumn":54},{"ruleId":"70","severity":1,"message":"74","line":34,"column":25,"nodeType":"72","messageId":"73","endLine":34,"endColumn":30},{"ruleId":"70","severity":1,"message":"75","line":60,"column":17,"nodeType":"72","messageId":"73","endLine":60,"endColumn":21},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]