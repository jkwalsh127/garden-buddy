[{"/Users/jakewalsh/Desktop/garden-buddy/client/src/index.js":"1","/Users/jakewalsh/Desktop/garden-buddy/client/src/App.js":"2","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Gardens.js":"3","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Signup.js":"4","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Login.js":"5","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Schedule.js":"6","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Guides.js":"7","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Landing.js":"8","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Header.js":"9","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/GardenTable.js":"10","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/auth.js":"11","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/mutations.js":"12","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/helpers.js":"13","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Tomatoes.js":"14","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Eggplants.js":"15","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Beets.js":"16","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Carrots.js":"17","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Asparagus.js":"18","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/queries.js":"19","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/actions.js":"20","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/GardenContext.js":"21","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/reducer.js":"22"},{"size":259,"mtime":1654822213505,"results":"23","hashOfConfig":"24"},{"size":3384,"mtime":1654829252652,"results":"25","hashOfConfig":"24"},{"size":1127,"mtime":1654894907279,"results":"26","hashOfConfig":"24"},{"size":2756,"mtime":1654661812317,"results":"27","hashOfConfig":"24"},{"size":2552,"mtime":1654832704327,"results":"28","hashOfConfig":"24"},{"size":4504,"mtime":1654753245045,"results":"29","hashOfConfig":"24"},{"size":3627,"mtime":1654882272442,"results":"30","hashOfConfig":"24"},{"size":983,"mtime":1654882272443,"results":"31","hashOfConfig":"24"},{"size":1298,"mtime":1654882272441,"results":"32","hashOfConfig":"24"},{"size":9741,"mtime":1654896119187,"results":"33","hashOfConfig":"24"},{"size":1230,"mtime":1654832704327,"results":"34","hashOfConfig":"24"},{"size":1713,"mtime":1654891934586,"results":"35","hashOfConfig":"24"},{"size":160,"mtime":1654661812336,"results":"36","hashOfConfig":"24"},{"size":3309,"mtime":1654882272441,"results":"37","hashOfConfig":"24"},{"size":3303,"mtime":1654882272441,"results":"38","hashOfConfig":"24"},{"size":2075,"mtime":1654882601059,"results":"39","hashOfConfig":"24"},{"size":3301,"mtime":1654882272441,"results":"40","hashOfConfig":"24"},{"size":3314,"mtime":1654882599753,"results":"41","hashOfConfig":"24"},{"size":816,"mtime":1654836486846,"results":"42","hashOfConfig":"24"},{"size":93,"mtime":1654894680160,"results":"43","hashOfConfig":"24"},{"size":1150,"mtime":1654908471798,"results":"44","hashOfConfig":"24"},{"size":1235,"mtime":1654895082545,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1y8xzkr",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jakewalsh/Desktop/garden-buddy/client/src/index.js",[],["95","96"],"/Users/jakewalsh/Desktop/garden-buddy/client/src/App.js",["97"],"import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\nimport Header from './components/Header';\nimport Schedule from './pages/Schedule';\nimport Gardens from './pages/Gardens';\nimport Landing from './pages/Landing';\nimport Guides from './pages/Guides';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport herbLeft from './images/herbs-left.png';\nimport herbRight from './images/herbs-right.png';\nimport leafLeft from './images/leaf-left.png';\nimport leafRight from './images/leaf-right.png';\n\n\n// const client = new ApolloClient({\n//   uri: '/graphql',\n//   cache: new InMemoryCache(),\n// });\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <div className='outer-container'>\n            <div className='title-wrap'>\n              <div className='title-container'>\n                <div className='inc-imgs'>\n                  <img src={leafLeft} alt=\"leafs\" className='leafs'/>\n                  <NavLink className=\"app-title font-title\" to=\"/\">\n                    Garden Buddy\n                  </NavLink>\n                  <img src={leafRight} alt=\"leafs\" className='leafs'/>\n                </div>\n                <p className='subtitle font-title'>\n                  The app that grows with you\n                </p>\n              </div>\n            </div>\n            <div className='inner-container'>\n              <Header />\n              <div className='content-container'>\n                <Routes>\n                  <Route\n                    path=\"/\"\n                    element={<Landing />}\n                  />\n                  <Route \n                      path=\"/login\" \n                      element={<Login />}\n                  />\n                  <Route \n                  path=\"/signup\" \n                  element={<Signup />}\n                  />\n                  <Route \n                      path=\"/findzone\" \n                      element={<Schedule />}\n                  />\n                  <Route \n                      path=\"/guides\" \n                      element={<Guides />}\n                  />\n                  <Route \n                      path=\"/gardens\" \n                      element={<Gardens />}\n                  />\n                </Routes>\n                <div className='lower-imgs'>\n                  <img src={herbLeft} alt=\"herbs\" className='herbs'/>\n                  <img src={herbRight} alt=\"herbs\" className='herbs'/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Gardens.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Signup.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Login.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Schedule.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Guides.js",["98","99","100","101","102"],"import React from 'react';\nimport './styles/guides.css';\nimport { Link } from 'react-router-dom';\nimport vegetables from './images/vegetables.jpg';\nimport Beets from '../components/Beets';\nimport Tomatoes from '../components/Tomatoes';\nimport Eggplants from '../components/Eggplants';\nimport Carrots from '../components/Carrots';\nimport Asparagus from '../components/Asparagus';\n\nexport default function Guides() {\n    return (\n        <>\n            <h1 className='page-title'>Growing Guides</h1>\n            <h2 className='veggie-title'>Check out the guides on how to grow your favorite vegetables!</h2>\n            <div className='content-wrap'>\n                <div className='list-wrap'>\n                    <ul className='veggie-list'> \n                        <h2 className='list-title'>Vegetables</h2>  \n                        <li className='veggie'>\n                            <Link className='veggie-link' to='/guides/Asparagus'>Asparagus</Link>\n                        </li>\n                        <li className='veggie'>\n                            <Link className='veggie-link' to='/guides//Beets'>Beets</Link>\n                        </li>\n                        <li className='veggie'>\n                            <Link className='veggie-link' to='/guides/Carrots'>Carrots</Link>\n                        </li>\n                        <li className='veggie'>\n                            <Link className='veggie-link' to='/guides/Eggplants'>Eggplants</Link>\n                        </li>\n                        <li className='veggie'>\n                            <Link className='veggie-link' to='/guides/Tomatoes'>Tomatoes</Link>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className='guide-wrap'>\n                    <div className='detail-wrap'>\n                        <ul className='detail-list'>\n                            <label className='detail-label'>Sun Exposure</label>\n                            <li className='detail'>\n                                Full Sun\n                            </li>\n                            <label className='detail-label'>Soil pH</label>\n                            <li className='detail'>\n                                Acidic-Neutral\n                            </li>\n                            <label className='detail-label'>Bloom Time</label>\n                            <li className='detail'>\n                                Summer\n                            </li>\n                            <label className='detail-label'>Days to Harvest</label>\n                            <li className='detail'>\n                                60-100\n                            </li>\n                            <label className='detail-label'>Recommended Start</label>\n                            <li className='detail'>\n                                Indoors\n                            </li>\n                            <label className='detail-label'>Seed Depth</label>\n                            <li className='detail'>\n                                1/2\"\n                            </li>\n                        </ul>\n                    </div> */}\n                    <div className='description-wrap'>\n                        <img className='veggie-img' src={vegetables} alt='tomato plant'></img>\n                        <p className='description'>\n                            Click any of the links on the left to access the growing guide for that vegetable. \n                        </p>\n                    </div>\n                {/* </div> */}\n            </div>\n        </>\n    );\n};\n","/Users/jakewalsh/Desktop/garden-buddy/client/src/pages/Landing.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Header.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/components/GardenTable.js",["103","104","105"],"import React, { useReducer, useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_GARDENS } from '../utils/queries';\nimport { ADD_GARDEN } from '../utils/mutations';\nimport { REMOVE_GARDEN } from '../utils/actions';\n\n\nimport './styles/gardentable.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport reducer from '../utils/reducer';\n\nimport { useGardenContext } from '../utils/GardenContext';\n\n\n\nconst GardenTable = () => {\n\n  const { loading, data } = useQuery(QUERY_GARDENS);\n  const gardenList = data?.gardens || [];\n\n  const initialState = useGardenContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n\n    // const handleClick = (id) => {\n    //   dispatch({\n    //     type: UPDATE_CURRENT_GARDEN,\n    //     currentGarden: id,\n    //   });\n    // };\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [vegetable, setVegetable] = useState('');\n    const [variety, setVariety] = useState('');\n    const [startedAs, setStartedAs] = useState('');\n    const [sowDate, setSowDate] = useState(new Date());\n    const [plantDate, setPlantDate] = useState(new Date());\n    const [firstHarvest, setFirstHarvest] = useState(new Date());\n    const [lastHarvest, setLastHarvest] = useState(new Date());\n    const [notes, setNotes] = useState('');\n\n\n    const [addGarden, { error }] = useMutation(ADD_GARDEN, {\n      update(cache, { data: { addGarden } }) {\n        try {\n          const { gardens } = cache.readQuery({ query: QUERY_GARDENS });\n  \n          cache.writeQuery({\n            query: QUERY_GARDENS,\n            data: { gardens: [addGarden, ...gardens] },\n          });\n        } catch (e) {\n          console.error(e);\n        }\n  \n      },\n    });\n\n    const handleAddGarden = async (e) => {\n      e.preventDefault();\n\n      const plantDateString = JSON.stringify(plantDate);\n      const plantDateSlice = plantDateString.slice(0,11);\n\n      try {\n        const { data } = await addGarden({\n          variables: {\n            vegetable,\n            variety,\n            startedAs,\n            sowDate,\n            plantDateSlice,\n            firstHarvest,\n            lastHarvest,\n            notes\n          },\n        });\n\n        setVegetable('');\n        setVariety('');\n        setNotes('');\n        window.location.reload();\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const handleInputChange = (event) => {\n      const { name, value } = event.target;\n\n      if (name === 'vegetable') {\n        setVegetable(value);\n      } else if (name === 'variety') {\n        setVariety(value);\n      } else if (name === 'startedAs') {\n        setStartedAs(value);\n      } else {\n        setNotes(value);\n      }\n    };\n\n    return (\n        <>\n        <div className='table-wrap'>\n          {loading ? (\n            <div>Loading...</div>\n              ) : (\n            <table>\n              <thead>\n                <tr>\n                  <th>Actions</th>\n                  <th>Vegetable</th>\n                  <th>variety</th>\n                  <th>Sow Date</th>\n                  <th>Plant Date</th>\n                  <th>First Harvest</th>\n                  <th>Last Harvest</th>\n                  <th className='notes'>Notes</th>\n                </tr>\n              </thead>\n              <tbody>\n              {gardenList.map((garden) => {\n                return (\n                  <tr key={garden._id} value={garden.vegetable}>\n                    <td className='actions'>\n                        <button onClick={handleShow} className='button'>\n                            <FontAwesomeIcon icon={faEdit} />\n                        </button>\n                        <button onClick={handleShow} className='button'>\n                            <FontAwesomeIcon icon={faPlusCircle} />\n                        </button>\n                        <button \n                          type=\"button\"\n                          onClick={() => {\n                            // The remove student action will return a new copy of state with an updated students array after the `id` has been filtered from the array\n                            return dispatch({\n                              type: REMOVE_GARDEN,\n                              payload: garden.id,\n                            });\n                          }}\n                        >\n                          <FontAwesomeIcon icon={faTrash} />\n                        </button>\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.vegetable}\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.variety}\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.sowDate}\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.plantDate}\n                    </td>\n                    <td className='inner-cells'>\n                      {garden.firstHarvest}\n                    </td>\n                    <td>\n                      {garden.lastHarvest}\n                    </td>\n                    <td className='notes-data'>\n                      {garden.notes}\n                    </td>\n                  </tr>\n                );\n              })}\n              </tbody>\n            </table>\n          )}\n        </div>\n        <Modal className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" show={show}>\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Modal title</h5>\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={handleClose}></button>\n              </div>\n              <div className=\"modal-body\">\n                <form onSubmit={handleAddGarden}>\n                  <div className=\"form-group\">\n                    <input\n                      value={vegetable}\n                      name='vegetable'\n                      onChange={handleInputChange}\n                      type='text'\n                      placeholder='Vegetable'\n                    />\n                    <input\n                      value={variety}\n                      name='variety'\n                      onChange={handleInputChange}\n                      type='text'\n                      placeholder='Variety'\n                    />\n                    <input\n                      value={startedAs}\n                      name='startedAs'\n                      onChange={handleInputChange}\n                      type='text'\n                      placeholder='Started as'\n                    />\n                    <div className='field-wrap'>\n                      <label className='input-label'>Select sowing date</label>\n                      <DatePicker \n                        className='field'\n                        selected={sowDate} \n                        onChange={setSowDate}\n                        dateFormat='MMMM dd yyyy'\n                      />\n                    </div>\n                    <div className='field-wrap'>\n                      <label className='input-label'>Select planting date</label>\n                      <DatePicker\n                        className='field'\n                        selected={plantDate} \n                        onChange={setPlantDate}\n                        dateFormat='MMMM dd yyyy'\n                      />\n                    </div>\n                    <div className='field-wrap'>\n                      <label className='input-label'>Select date of first harvest</label>\n                      <DatePicker\n                        className='field'\n                        selected={firstHarvest} \n                        onChange={setFirstHarvest}\n                        dateFormat='MMMM dd yyyy'\n                      />\n                    </div>\n                    <div className='field-wrap'>\n                      <label className='input-label'>Select date of last harvest</label>\n                      <DatePicker\n                        className='field'\n                        selected={lastHarvest} \n                        onChange={setLastHarvest}\n                        dateFormat='MMMM dd yyyy'\n                      />\n                    </div>\n                    <textarea\n                      placeholder=\"add some notes...\"\n                      value={notes}\n                      name='notes'\n                      onChange={handleInputChange}\n                      type='text'\n                      className='notes-input'\n                    ></textarea>\n                    <button className=\"btn btn-primary\" onClick={handleClose}>Submit</button>\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={handleClose}>Close</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleClose}>Save changes</button>\n              </div>\n            </div>\n          </div>\n        </Modal>\n    </>\n    )\n};\n\nexport default GardenTable;","/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/auth.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/mutations.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/helpers.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Tomatoes.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Eggplants.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Beets.js",["106"],"import React from 'react';\nimport './styles/guides.css';\nimport { Link } from 'react-router-dom';\nimport beets from '../pages/images/rainbow-beets.jpg';\n\nexport default function Beets() {\n    return (\n            <>\n            <h1 className='page-title'>Growing Guides</h1>\n            <h2 className='veggie-title'>Beets</h2>\n            <div className='content-wrap'>\n            <div className='guide-wrap'>\n                <div className='detail-wrap'>\n                    <ul className='detail-list'>\n                        <label className='detail-label'>Sun Exposure</label>\n                        <li className='detail'>\n                            Full/Part Sun\n                        </li>\n                        <label className='detail-label'>Soil pH</label>\n                        <li className='detail'>\n                            Acidic, Neutral\n                        </li>\n                        <label className='detail-label'>Bloom Time</label>\n                        <li className='detail'>\n                            Seasonal\n                        </li>\n                        <label className='detail-label'>Days to Harvest</label>\n                        <li className='detail'>\n                            55-70\n                        </li>\n                        <label className='detail-label'>Recommended Start</label>\n                        <li className='detail'>\n                            Indoors/Outdoors\n                        </li>\n                        <label className='detail-label'>Seed Depth</label>\n                        <li className='detail'>\n                            1/2\"\n                        </li>\n                    </ul>\n                </div>\n                <div className='description-wrap'>\n                    <img className='veggie-img' src={beets} alt='tomato plant'></img>\n                    <p className='description'>\n                        Beets can be used for a variety of things.\n                    </p>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n};\n","/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Carrots.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/components/Asparagus.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/queries.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/actions.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/GardenContext.js",[],"/Users/jakewalsh/Desktop/garden-buddy/client/src/utils/reducer.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":50,"nodeType":"113","messageId":"114","endLine":3,"endColumn":54},{"ruleId":"111","severity":1,"message":"115","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"116","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":16},{"ruleId":"111","severity":1,"message":"117","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":17},{"ruleId":"111","severity":1,"message":"118","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":15},{"ruleId":"111","severity":1,"message":"119","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":17},{"ruleId":"111","severity":1,"message":"120","line":30,"column":10,"nodeType":"113","messageId":"114","endLine":30,"endColumn":15},{"ruleId":"111","severity":1,"message":"121","line":54,"column":25,"nodeType":"113","messageId":"114","endLine":54,"endColumn":30},{"ruleId":"111","severity":1,"message":"122","line":77,"column":17,"nodeType":"113","messageId":"114","endLine":77,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Beets' is defined but never used.","'Tomatoes' is defined but never used.","'Eggplants' is defined but never used.","'Carrots' is defined but never used.","'Asparagus' is defined but never used.","'state' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]